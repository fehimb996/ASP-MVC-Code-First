@model PagedList.IPagedList<RVASIspit.Models.Proizvod>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Proizvodi";
}

<h2 class="text-center pb-1">Proizvodi</h2>

<div class="search-sort-form text-center">
    @using (Html.BeginForm("Index", "Proizvod", FormMethod.Get))
    {
        <div class="form-inline d-flex justify-content-center">
            <div class="form-group mx-2">
                <input type="text" name="searchString" value="@ViewBag.CurrentFilter" placeholder="Pretraga po nazivu" class="form-control" />
            </div>
            <div class="form-group mx-2">
                @Html.DropDownList("grupaProizvodaId", ViewBag.GrupaProizvodaID as SelectList, "Sve grupe", new { @class = "form-control" })
            </div>
            <div class="form-group mx-2">
                @Html.DropDownList("vrstaProizvodaId", ViewBag.VrstaProizvodaID as SelectList, "Sve vrste", new { @class = "form-control" })
            </div>
            <div class="form-group mx-2">
                <input type="submit" value="Search" class="btn btn-outline-success" />
            </div>
            <div class="form-group mx-2">
                <a href="@Url.Action("Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter, grupaProizvodaId = ViewBag.GrupaProizvodaID, vrstaProizvodaId = ViewBag.VrstaProizvodaID })" class="btn btn-outline-primary">
                    Sortiraj po ceni
                </a>
            </div>
        </div>
    }
</div>

@if (User.IsInRole("Admin"))
{
    <p class="text-center pt-2">
        @Html.ActionLink("Dodaj novi proizvod", "Create", null, new { @class = "btn btn-primary" })
    </p>
}

@if (!Model.Any())
{
    <p class="text-center">Nema nijednog proizvoda.</p>
}
else
{
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-3 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Naziv)</h5>
                        <p class="card-text">Cena: @Html.DisplayFor(modelItem => item.Cena)</p>
                        <p class="card-text">Grupa: @Html.DisplayFor(modelItem => item.GrupaProizvoda.NazivGrupe)</p>
                        <p class="card-text">Vrsta: @Html.DisplayFor(modelItem => item.VrstaProizvoda.NazivVrste)</p>
                        <a href="@Url.Action("Details", new { id = item.ProizvodID })" class="btn btn-primary">Detalji</a>
                        @if (User.IsInRole("Admin"))
                        {
                            <a href="@Url.Action("Edit", new { id = item.ProizvodID })" class="btn btn-primary">Izmeni</a>
                            <a href="@Url.Action("Delete", new { id = item.ProizvodID })" class="btn btn-primary">Obriši</a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

<div class="pagination-container text-center">
    <div>
        Stranica @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) od @Model.PageCount
    </div>

    <div>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, grupaProizvodaId = ViewBag.GrupaProizvodaID, vrstaProizvodaId = ViewBag.VrstaProizvodaID }), new PagedListRenderOptions
        {
            LinkToFirstPageFormat = "Prva",
            LinkToLastPageFormat = "Poslednja",
            LinkToNextPageFormat = "Sledeća",
            LinkToPreviousPageFormat = "Prethodna",
            MaximumPageNumbersToDisplay = 5,
            ContainerDivClasses = new[] { "pagination" },
            FunctionToTransformEachPageLink = (liTag, aTag) =>
            {
                aTag.AddCssClass("btn btn-primary mx-1");
                return aTag;
            }
        })
    </div>
</div>
